# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

before_all do |lane, opts|

  # Need to use UTF-8 when using xcpretty
  Encoding.default_external = Encoding::UTF_8
  Encoding.default_internal = Encoding::UTF_8

  setup_travis if ENV["TRAVIS_CI"]
end

private_lane :fix_xcode10_2_1_test_issue do
  # https://developer.apple.com/documentation/xcode_release_notes/xcode_10_2_1_release_notes
  iOS8_4 = '/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 8.4.simruntime/Contents/Resources/RuntimeRoot/usr/lib/swift'
  iOS9_3 = '/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 9.3.simruntime/Contents/Resources/RuntimeRoot/usr/lib/swift'
  tvOS9_2 = '/Library/Developer/CoreSimulator/Profiles/Runtimes/tvOS 9.2.simruntime/Contents/Resources/RuntimeRoot/usr/lib/swift'

  FileUtils.mkdir(iOS8_4) if ENV['PLATFORM'] == 'ios' && ENV['RUNTIME'] == '8' && !File.directory?(iOS8_4)
  FileUtils.mkdir(iOS9_3) if ENV['PLATFORM'] == 'ios' && ENV['RUNTIME'] == '9' && !File.directory?(iOS9_3)
  FileUtils.mkdir(tvOS9_2) if ENV['PLATFORM'] == 'tvos' && ENV['RUNTIME'] == '9' && !File.directory?(tvOS9_2)
end

desc "Executes SDK Unit Tests"
lane :test do
  fix_xcode10_2_1_test_issue if ENV['RUNTIME'].to_i < 10

  if ENV['PLATFORM'] == 'mac' # Test using phyiscal device
    scan(
      workspace: ENV['WORKSPACE'],
      scheme: ENV['SCHEME_SDK'],
      destination: ENV['DESTINATION']
    )
  else # Test using simulators
    scan(
      workspace: ENV['WORKSPACE'],
      scheme: ENV['SCHEME_SDK'],
      device: ENV['DEVICES'],
      code_coverage: true
    )
  end
end

desc "Generates Code Coverage Files"
lane :code_coverage do
  # Generate code coverage files
  slather(
    travis: ENV["TRAVIS_CI"],
    workspace: ENV['WORKSPACE'],
    proj: ENV['PROJECT_SDK'],
    scheme: ENV['SCHEME_SDK'],
    output_directory: 'fastlane/test_output',
    use_bundle_exec: true,
    cobertura_xml: true,
    decimals: 2,
    verbose: true,
    ignore: "Tests/**/*"
  )
end

desc "Generates Code Coverage Files"
lane :code_coverage_local do
  # Generate code coverage files
  slather(
    travis: ENV["TRAVIS_CI"],
    workspace: ENV['WORKSPACE'],
    proj: ENV['PROJECT_SDK'],
    scheme: ENV['SCHEME_SDK'],
    output_directory: 'fastlane/test_output',
    use_bundle_exec: true,
    html: true,
    decimals: 2,
    verbose: true,
    ignore: "Tests/**/*",
    show: true
  )
end

desc "Builds the SDK Example app"
lane :build_example do
# xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty;
  xcodebuild(
    workspace: ENV['WORKSPACE'],
    scheme: ENV['SCHEME_EXAMPLE'],
    destination: ENV['DESTINATION_EXAMPLE'],
    configuration: "Release",
    build: true
  )
end
